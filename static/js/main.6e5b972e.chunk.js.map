{"version":3,"sources":["styles.js","components/Header/index.jsx","alphabet/index.js","utils/alphabetContainsSymbol.js","components/encrypt/Subtitution/index.jsx","utils/encript.js","components/encrypt/Vigener/index.jsx","components/encrypt/Streaming/index.jsx","utils/decrypt.js","components/decrypt/Subtitution/index.jsx","components/decrypt/Vigener/index.jsx","components/decrypt/Streaming/index.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","input","width","padding","box","header","position","paper","methodWrapper","display","flexDirection","justifyContent","height","result","minHeight","overflowX","Header","AppBar","Toolbar","Typography","variant","russianAlphabet","split","englishAlphabet","alphabetContainsSymbol","symbol","alphabet","indexOf","Substitution","message","handleMessageChange","currentAbt","handleResultChange","useState","shift","setShift","styles","useEffect","toLowerCase","map","symbolPositionInAlphabet","length","join","toUpperCase","substitutionEncrypt","className","TextField","id","label","value","onChange","event","color","autoFocus","multiline","type","target","onBlur","Vigener","key","setKey","keyNumerated","repeat","Math","ceil","letter","includes","console","log","index","vigenerEncrypt","Streaming","m","parseInt","toString","streamingEncrypt","substitutionDecrypt","messageCharArray","alphabetDecryptedPosition","vigenerDecrypt","temp","streamingDecrypt","App","setResult","setCurrentAbt","setMessage","currentMethod","setCurrentMethod","tabValue","setTabValue","Box","Paper","FormControl","InputLabel","Select","labelId","MenuItem","Tabs","Tab","Grid","container","spacing","item","sm","xs","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6e5b972e.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  input: {\n    width: \"100%\",\n    padding: \"0 4px\",\n  },\n\n  box: {\n    padding: 16,\n  },\n\n  header: {\n    position: \"fixed\",\n  },\n\n  paper: {\n    padding: 16,\n  },\n  methodWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    height: 128,\n  },\n  result: {\n    minHeight: 64,\n    overflowX: \"auto\",\n  },\n});\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useStyles } from \"../../styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst Header = () => {\n  const styles = useStyles();\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Typography variant=\"h6\">Crypto Calculator</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","const RUS_STRING = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'\nconst ENG_STRING = 'abcdefghijklmnopqrstuvwxyz'\n\nconst alphabetSplitSeparator = ''\n\nexport const russianAlphabet = RUS_STRING.split(alphabetSplitSeparator)\nexport const englishAlphabet = ENG_STRING.split(alphabetSplitSeparator)","import { englishAlphabet } from \"../alphabet\";\n\nexport const alphabetContainsSymbol = (\n  symbol = \"\",\n  alphabet = englishAlphabet\n) => alphabet.indexOf(symbol) !== -1;\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { englishAlphabet, russianAlphabet } from \"../../../alphabet\";\nimport { substitutionEncrypt } from \"../../../utils/encript\";\nimport { useStyles } from \"../../../styles\";\n\nconst Substitution = ({\n  message,\n  handleMessageChange,\n  currentAbt,\n  handleResultChange,\n}) => {\n  const [shift, setShift] = useState(2);\n\n  const styles = useStyles();\n\n  useEffect(() => {\n    handleResultChange(substitutionEncrypt(message, shift, currentAbt));\n  }, [message, currentAbt, shift]);\n\n  return (\n    <div className={styles.methodWrapper}>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Input\"\n        value={message}\n        onChange={(event) => {\n          handleMessageChange(event);\n        }}\n        className={styles.input}\n        color=\"primary\"\n        autoFocus\n        multiline\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"Сдвиг\"\n        value={shift}\n        type=\"number\"\n        onChange={(event) =>\n          setShift(event.target.value ? +event.target.value : null)\n        }\n        onBlur={() => setShift(shift % currentAbt.length)}\n        className={styles.input}\n      />\n    </div>\n  );\n};\n\nexport default Substitution;\n","import { englishAlphabet } from \"../alphabet\";\nimport { alphabetContainsSymbol } from \"./alphabetContainsSymbol\";\n\nexport const substitutionEncrypt = (message = \"\", shift = 0, alphabet = []) => {\n  const messageCharArray = message.toLowerCase().split(\"\");\n\n  return messageCharArray\n    .map((symbol) => {\n      const symbolPositionInAlphabet = alphabet.indexOf(symbol);\n\n      if (!alphabetContainsSymbol(symbol, alphabet)) {\n        return symbol;\n      }\n\n      return alphabet[(symbolPositionInAlphabet + shift) % alphabet.length];\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\nexport const vigenerEncrypt = (\n  message = \"MESSAGE\",\n  key = \"KEY\",\n  alphabet = englishAlphabet\n) => {\n  if (key.length === 0) {\n    return \"\";\n  }\n\n  const keyNumerated = key\n    .repeat(Math.ceil(message.length / key.length))\n    .toLowerCase()\n    .split(\"\")\n    .map((letter) =>\n      alphabetContainsSymbol(letter, alphabet) ? alphabet.indexOf(letter) : \"#\"\n    );\n\n  if (keyNumerated.includes(\"#\")) {\n    console.log(keyNumerated);\n    return \"\";\n  }\n\n  return message\n    .toLowerCase()\n    .split(\"\")\n    .map((symbol, index) => {\n      const symbolPositionInAlphabet = alphabet.indexOf(symbol);\n\n      if (!alphabetContainsSymbol(symbol, alphabet)) {\n        return symbol;\n      }\n\n      return alphabet[\n        (symbolPositionInAlphabet + keyNumerated[index]) % alphabet.length\n      ];\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\nexport const streamingEncrypt = (message, key) => {\n  if (\n    message.length !== key.length ||\n    message.length === 0 ||\n    key.length === 0\n  ) {\n    return \"\";\n  }\n\n  const result = message.map((m, index) =>\n    ((parseInt(m, 16) + parseInt(key[index], 2)) % 16).toString(16)\n  );\n\n  return result.includes(\"NaN\") ? \"\" : result.join(\", \").toUpperCase();\n};\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useStyles } from \"../../../styles\";\nimport { vigenerEncrypt } from \"../../../utils/encript\";\n\nconst Vigener = ({\n  message,\n  handleMessageChange,\n  currentAbt,\n  handleResultChange,\n}) => {\n  const [key, setKey] = useState(\"KEY\");\n  const a = 1;\n  const styles = useStyles();\n\n  useEffect(() => {\n    handleResultChange(vigenerEncrypt(message, key, currentAbt));\n  }, [message, currentAbt, key]);\n\n  return (\n    <div className={styles.methodWrapper}>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Input\"\n        value={message}\n        onChange={(event) => {\n          handleMessageChange(event);\n        }}\n        className={styles.input}\n        color=\"primary\"\n        autoFocus\n        multiline\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"Ключ\"\n        value={key}\n        onChange={(event) => setKey(event.target.value.toUpperCase())}\n        className={styles.input}\n      />\n    </div>\n  );\n};\n\nexport default Vigener;\n","import React, { useEffect, useState } from \"react\";\nimport { useStyles } from \"../../../styles\";\nimport { streamingEncrypt } from \"../../../utils/encript\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst Streaming = ({ message, handleMessageChange, handleResultChange }) => {\n  const [key, setKey] = useState(\"\");\n  const styles = useStyles();\n\n  useEffect(() => {\n    handleResultChange(\n      streamingEncrypt(message.split(/,*\\s*/), key.split(\",\"))\n    );\n  }, [message, key]);\n\n  return (\n    <div>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Input\"\n        value={message}\n        onChange={handleMessageChange}\n        className={styles.input}\n        color=\"primary\"\n        autoFocus\n        multiline\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"Ключ\"\n        value={key}\n        onChange={(event) => setKey(event.target.value)}\n        className={styles.input}\n      />\n    </div>\n  );\n};\n\nexport default Streaming;\n","import { alphabetContainsSymbol } from \"./alphabetContainsSymbol\";\nimport { englishAlphabet, russianAlphabet } from \"../alphabet\";\n\nexport const substitutionDecrypt = (\n  message = \"ЦВОКНКБ КОБ\",\n  shift = 2,\n  alphabet = russianAlphabet\n) => {\n  const messageCharArray = message.toLowerCase().split(\"\");\n\n  return messageCharArray\n    .map((symbol) => {\n      const symbolPositionInAlphabet = alphabet.indexOf(symbol);\n\n      if (!alphabetContainsSymbol(symbol, alphabet)) {\n        console.log(\"+\", symbol);\n        return symbol;\n      }\n\n      const alphabetDecryptedPosition =\n        (symbolPositionInAlphabet - shift) % alphabet.length;\n\n      return alphabetDecryptedPosition < 0\n        ? alphabet[alphabet.length + alphabetDecryptedPosition]\n        : alphabet[alphabetDecryptedPosition];\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\nexport const vigenerDecrypt = (\n  message = \"MESSAGE\",\n  key = \"KEY\",\n  alphabet = englishAlphabet\n) => {\n  if (key.length === 0) {\n    return \"\";\n  }\n\n  const keyNumerated = key\n    .repeat(Math.ceil(message.length / key.length))\n    .toLowerCase()\n    .split(\"\")\n    .map((letter) =>\n      alphabetContainsSymbol(letter, alphabet) ? alphabet.indexOf(letter) : \"#\"\n    );\n\n  if (keyNumerated.includes(\"#\")) {\n    console.log(keyNumerated);\n    return \"\";\n  }\n\n  return message\n    .toLowerCase()\n    .split(\"\")\n    .map((symbol, index) => {\n      const symbolPositionInAlphabet = alphabet.indexOf(symbol);\n\n      if (!alphabetContainsSymbol(symbol, alphabet)) {\n        return symbol;\n      }\n\n      return alphabet[\n        (symbolPositionInAlphabet + alphabet.length - keyNumerated[index]) %\n          alphabet.length\n      ];\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\nexport const streamingDecrypt = (message, key) => {\n  if (\n    message.length !== key.length ||\n    message.length === 0 ||\n    key.length === 0\n  ) {\n    return \"\";\n  }\n\n  const result = message.map((m, index) => {\n    const temp = (parseInt(m, 16) - parseInt(key[index], 2)) % 16;\n    return (temp < 0 ? temp + 16 : temp).toString(16);\n  });\n  console.log(result);\n  return result.includes(\"NaN\") ? \"\" : result.join(\", \").toUpperCase();\n};\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { englishAlphabet, russianAlphabet } from \"../../../alphabet\";\nimport { substitutionEncrypt } from \"../../../utils/encript\";\nimport { useStyles } from \"../../../styles\";\nimport { substitutionDecrypt } from \"../../../utils/decrypt\";\n\nconst Substitution = ({\n  message,\n  handleMessageChange,\n  currentAbt,\n  handleResultChange,\n}) => {\n  const [shift, setShift] = useState(2);\n\n  const styles = useStyles();\n\n  useEffect(() => {\n    handleResultChange(substitutionDecrypt(message, shift, currentAbt));\n  }, [message, currentAbt, shift]);\n\n  return (\n    <div className={styles.methodWrapper}>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Input\"\n        value={message}\n        onChange={(event) => {\n          handleMessageChange(event);\n        }}\n        className={styles.input}\n        color=\"primary\"\n        autoFocus\n        multiline\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"Сдвиг\"\n        value={shift}\n        type=\"number\"\n        onChange={(event) =>\n          setShift(event.target.value ? +event.target.value : null)\n        }\n        onBlur={() => setShift(shift % currentAbt.length)}\n        className={styles.input}\n      />\n    </div>\n  );\n};\n\nexport default Substitution;\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useStyles } from \"../../../styles\";\nimport { vigenerEncrypt } from \"../../../utils/encript\";\nimport { vigenerDecrypt } from \"../../../utils/decrypt\";\n\nconst Vigener = ({\n  message,\n  handleMessageChange,\n  currentAbt,\n  handleResultChange,\n}) => {\n  const [key, setKey] = useState(\"KEY\");\n  const a = 1;\n  const styles = useStyles();\n\n  useEffect(() => {\n    handleResultChange(vigenerDecrypt(message, key, currentAbt));\n  }, [message, currentAbt, key]);\n\n  return (\n    <div className={styles.methodWrapper}>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Input\"\n        value={message}\n        onChange={(event) => {\n          handleMessageChange(event);\n        }}\n        className={styles.input}\n        color=\"primary\"\n        autoFocus\n        multiline\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"Ключ\"\n        value={key}\n        onChange={(event) => setKey(event.target.value.toUpperCase())}\n        className={styles.input}\n      />\n    </div>\n  );\n};\n\nexport default Vigener;\n","import React, { useEffect, useState } from \"react\";\nimport { useStyles } from \"../../../styles\";\nimport { streamingEncrypt } from \"../../../utils/encript\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { streamingDecrypt } from \"../../../utils/decrypt\";\n\nconst Streaming = ({ message, handleMessageChange, handleResultChange }) => {\n  const [key, setKey] = useState(\"\");\n  const styles = useStyles();\n\n  useEffect(() => {\n    handleResultChange(\n      streamingDecrypt(message.split(/,*\\s*/), key.split(\",\"))\n    );\n  }, [message, key]);\n\n  return (\n    <div>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Input\"\n        value={message}\n        onChange={handleMessageChange}\n        className={styles.input}\n        color=\"primary\"\n        autoFocus\n        multiline\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"Ключ\"\n        value={key}\n        onChange={(event) => setKey(event.target.value)}\n        className={styles.input}\n      />\n    </div>\n  );\n};\n\nexport default Streaming;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport { englishAlphabet, russianAlphabet } from \"./alphabet\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\n\nimport SubstitutionEncrypt from \"./components/encrypt/Subtitution\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { useStyles } from \"./styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport VigenerEncrypt from \"./components/encrypt/Vigener\";\nimport StreamingEncrypt from \"./components/encrypt/Streaming\";\nimport { substitutionDecrypt } from \"./utils/decrypt\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport SubstitutionDecrypt from \"./components/decrypt/Subtitution\";\nimport VigenerDecrypt from \"./components/decrypt/Vigener\";\nimport StreamingDecrypt from \"./components/decrypt/Streaming\";\n\nconst App = () => {\n  const [result, setResult] = useState(\"\");\n  const [currentAbt, setCurrentAbt] = useState(russianAlphabet);\n  const [message, setMessage] = useState(\"\");\n  const [currentMethod, setCurrentMethod] = useState(\"substitution\");\n  const [tabValue, setTabValue] = useState(0);\n\n  const handleAbtChange = (event) => setCurrentAbt(event.target.value);\n\n  const handleMessageChange = ({ target: { value } }) => {\n    setMessage(value.toUpperCase());\n  };\n\n  const handleTabChange = (event, value) => {\n    setTabValue(value);\n  };\n  const handleMethodChange = ({ target: { value } }) => setCurrentMethod(value);\n\n  const styles = useStyles();\n  const handleResultChange = (value) => setResult(value);\n\n  console.log(substitutionDecrypt());\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Box className={styles.box}>\n        <Paper className={[styles.paper, styles.methodWrapper]}>\n          <FormControl>\n            <InputLabel id=\"method-label\">Метод шифрования</InputLabel>\n            <Select\n              labelId=\"method-label\"\n              id=\"method-label\"\n              value={currentMethod}\n              onChange={handleMethodChange}\n              className={styles.input}\n            >\n              <MenuItem value={\"substitution\"}>Метод Перестановки</MenuItem>\n              <MenuItem value={\"vigener\"}>Метод Виженера</MenuItem>\n              <MenuItem value={\"streaming\"}>Последовательный метод</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"language-select-label\">Алфавит</InputLabel>\n            <Select\n              labelId=\"language-select-label\"\n              id=\"language-select-label\"\n              value={currentAbt}\n              onChange={handleAbtChange}\n              className={styles.input}\n            >\n              <MenuItem value={russianAlphabet}>Русский</MenuItem>\n              <MenuItem value={englishAlphabet}>Английский</MenuItem>\n            </Select>\n          </FormControl>\n        </Paper>\n      </Box>\n\n      <Box className={styles.box}>\n        <AppBar position=\"static\">\n          <Tabs value={tabValue} onChange={handleTabChange} variant=\"fullWidth\">\n            <Tab label=\"Зашифровать\" />\n            <Tab label=\"Расшифровать\" />\n          </Tabs>\n        </AppBar>\n\n        <Grid container spacing={3} className={styles.box}>\n          <Grid item sm={6} xs={12}>\n            {tabValue === 0 && (\n              <Paper className={styles.paper}>\n                {currentMethod === \"substitution\" && (\n                  <SubstitutionEncrypt\n                    message={message}\n                    handleMessageChange={handleMessageChange}\n                    currentAbt={currentAbt}\n                    handleResultChange={handleResultChange}\n                  />\n                )}\n                {currentMethod === \"vigener\" && (\n                  <VigenerEncrypt\n                    message={message}\n                    handleMessageChange={handleMessageChange}\n                    currentAbt={currentAbt}\n                    handleResultChange={handleResultChange}\n                  />\n                )}\n                {currentMethod === \"streaming\" && (\n                  <StreamingEncrypt\n                    message={message}\n                    handleMessageChange={handleMessageChange}\n                    handleResultChange={handleResultChange}\n                  />\n                )}\n              </Paper>\n            )}\n\n            {tabValue === 1 && (\n              <Paper className={styles.box}>\n                {currentMethod === \"substitution\" && (\n                  <SubstitutionDecrypt\n                    message={message}\n                    handleMessageChange={handleMessageChange}\n                    currentAbt={currentAbt}\n                    handleResultChange={handleResultChange}\n                  />\n                )}\n                {currentMethod === \"vigener\" && (\n                  <VigenerDecrypt\n                    message={message}\n                    handleMessageChange={handleMessageChange}\n                    currentAbt={currentAbt}\n                    handleResultChange={handleResultChange}\n                  />\n                )}\n                {currentMethod === \"streaming\" && (\n                  <StreamingDecrypt\n                    message={message}\n                    handleMessageChange={handleMessageChange}\n                    currentAbt={currentAbt}\n                    handleResultChange={handleResultChange}\n                  />\n                )}\n              </Paper>\n            )}\n          </Grid>\n          <Grid item sm={6} xs={12}>\n            <Paper className={[styles.paper, styles.result]}>\n              <Typography color=\"secondary\" variant=\"h6\">\n                Результат:\n              </Typography>\n              <Typography color=\"primary\" variant=\"h4\">\n                {result}\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}